using System;
using System.Collections.Generic;
using System.Linq;

namespace Ranking
{
    class Program
    {
        static void Main(string[] args)
        {
            var contests = new Dictionary<string, string>();

            string[] input = Console.ReadLine()
                .Split(':');

            while (input[0] != "end of contests")
            {
                string contest = input[0];
                string pass = input[1];

                if (!contests.ContainsKey(contest))
                {
                    contests.Add(contest, pass);
                }
                else
                {
                    contests[contest] = pass;
                }

                input = Console.ReadLine()
                .Split(':');
            }
            var studentsDict = new SortedDictionary<string, Dictionary<string, int>>();

            input = Console.ReadLine()
                .Split("=>");

            while (input[0] != "end of submissions")
            {
                string contest = input[0];
                string pass = input[1];
                string student = input[2];
                int points = int.Parse(input[3]);

                if (contests.ContainsKey(contest) && contests[contest] == pass)
                {
                    if (!studentsDict.ContainsKey(student))
                    {
                        studentsDict.Add(student, new Dictionary<string, int>());
                        studentsDict[student].Add(contest, points);
                    }
                    else
                    {
                        if (studentsDict[student].ContainsKey(contest))
                        {
                            if (studentsDict[student][contest] < points)
                            {
                                studentsDict[student][contest] = points;
                            }
                        }
                        else
                        {
                            studentsDict[student].Add(contest, points);
                        }
                    }


                }
                input = Console.ReadLine()
                .Split("=>");

            }
            var total = new Dictionary<string, int>();
            foreach (var student in studentsDict)
            {
                if (!total.ContainsKey(student.Key))
                {
                    total.Add(student.Key, 0);
                }
                foreach (var dictionary in student.Value)
                {
                    total[student.Key] += dictionary.Value;
                }
            }
            var max = total.Aggregate((x, y) => x.Value > y.Value ? x : y).Key;
            Console.WriteLine($"Best candidate is {max} with total {total[max]} points.\nRanking:");

            foreach (var item in studentsDict)
            {
                Console.WriteLine($"{item.Key}");

                foreach (var dict in item.Value.OrderByDescending(x => x.Value))
                {
                    Console.WriteLine($"#  {dict.Key} -> {dict.Value}");
                }
            }
        }


    }

}
