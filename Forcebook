using System;
using System.Collections.Generic;
using System.Linq;

namespace ForceBook
{
    class Program
    {
        static void Main(string[] args)
        {
            var book = new Dictionary<string, List<string>>();

            string input = Console.ReadLine();
            while (input != "Lumpawaroo")
            {
                if (input.Contains('|'))
                {
                    string[] tokens = input.Split(" | ");
                    string side = tokens[0];
                    string user = tokens[1];

                    if (!book.ContainsKey(side))
                    {
                        book.Add(side, new List<string>());
                    }
                    foreach (var item in book)
                    {
                        if (!item.Key.Contains(side) && item.Value.Contains(user))
                        {
                            item.Value.Remove(user);
                        }
                    }
                    if (!book[side].Contains(user))
                    {

                        book[side].Add(user);

                    }
                }
                else if (input.Contains("->"))
                {
                    string[] tokens = input.Split(" -> ");
                    string side = tokens[1];
                    string user = tokens[0];

                    if (!book.ContainsKey(side))
                    {
                        book.Add(side, new List<string>());
                    }
                    if (!book[side].Contains(user))
                    {
                        book[side].Add(user);
                        Console.WriteLine($"{user} joins the {side} side!");

                        foreach (var item in book)
                        {
                            if (!item.Key.Contains(side))
                            {
                                item.Value.Remove(user);
                            }

                        }
                    }
                    else
                    {
                        foreach (var item in book)
                        {
                            if (item.Value.Contains(user))
                            {
                                item.Value.Remove(user);
                                foreach (var thing in book)
                                {
                                    if (!thing.Key.Contains(side))
                                    {
                                        thing.Value.Add(user);
                                        Console.WriteLine($"{user} joins the {thing.Key} side!");
                                        break;
                                    }
                                }
                                break;
                            }
                        }
                    }
                }
                input = Console.ReadLine();
            }

            foreach (var item in book.Where(x => x.Value.Count > 0).OrderByDescending(x => x.Value.Count).ThenBy(x => x.Key))
            {
                if (item.Value.Count >= 1)
                {
                    Console.WriteLine($"Side: {item.Key}, Members: {item.Value.Count}");
                    foreach (var person in item.Value.OrderBy(x => x))
                    {
                        Console.WriteLine($"! {person}");
                    }
                }

            }
        }
    }
}
